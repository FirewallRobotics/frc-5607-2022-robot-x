// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;

import edu.wpi.first.networktables.NetworkTable;
import edu.wpi.first.networktables.NetworkTableEntry;
import edu.wpi.first.networktables.NetworkTableInstance;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import frc.robot.commands.*;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class Vision extends SubsystemBase {

  // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

  //These are all placeholder values "borrowed" from Willow with slight modification
  //Drive Train:
  
  public static NetworkTableInstance inst = NetworkTableInstance.getDefault();
  public static NetworkTable table = inst.getTable("cargoball");
  public static NetworkTableEntry x = table.getEntry("X");
  public static NetworkTableEntry y = table.getEntry("Y");
  public static NetworkTableEntry radius = table.getEntry("R");
  public static NetworkTable goalTable = inst.getTable("goal");
  public static NetworkTableEntry goalX = goalTable.getEntry("X");
  public static NetworkTableEntry goalY = goalTable.getEntry("Y");
  public static NetworkTableEntry goalRadius = goalTable.getEntry("R");

  public static double goalMaxRadius = 98;
  public static double goalMinRadius = 5;
  public static double goalMaxOutR = 1;
  public static double goalMinOutR = -1;

  public static double goalNeutralOffSetR = 0.23;
  public static double goalPGainR = 0.250;
  public static double goalMaxX = 150;
  public static double goalMinX = 5;
  public static double goalMaxx = 1;
  public static double goalMinx = -1;
  public static double goalNeutralOffSetX = 0;
  public static double goalPGainX = 0.25;
  public static double goalScaledX = 0;
  public static double goalScaledRadius = 0;
  public static double MaxRadius = 38;
  public static double MinRadius = 7;
  public static double MaxOutR = 1;
  public static double NeutralOffSetR = 0.25;
  public static double PGainR = 0.250;
  public static double MaxX = 150;
  public static double MinX = 5;
  public static double Maxx = 1;
  public static double Minx = -1;

  //Comments from last year |
  //                        V
  // NeutralOffSetX - center of ball is at 937 / 1280 = 0.76 on the x axis when
  // robot is right on the ball.  640 / 1280 = 0.50 is straight in the middle.
  // 0.76 - 0.50 = 0.26.
  public static double NeutralOffSetX = 0.26;
  public static double PGainX = 0.25;
  public static double ScaledX = 0;
  public static double ScaledRadius = 0;

  // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

  // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

  // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

  /**
   *
   */
  public Vision() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
  }

  @Override
  public void periodic() {
    // This method will be called once per scheduler run

  }

  @Override
  public void simulationPeriodic() {
    // This method will be called once per scheduler run when in simulation

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

  }
}
